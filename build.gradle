plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.google.protobuf" version "0.9.4"
}

ext {
	lombokVersion = '1.18.32'
	mapstructVersion = '1.6.0.Beta1'
	grpcVersion = '1.62.2'
	protobufVersion = '3.25.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Spring Boot Starter WebFlux for reactive web applications
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Spring Data R2DBC
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'

	// R2DBC PostgreSQL Driver
	implementation 'io.r2dbc:r2dbc-postgresql:0.8.13.RELEASE'

	//liquibase
	implementation "org.liquibase:liquibase-core"
	runtimeOnly 'org.springframework:spring-jdbc'
	runtimeOnly 'org.postgresql:postgresql'

	implementation "org.mapstruct:mapstruct:$mapstructVersion"
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

	compileOnly "org.projectlombok:lombok:$lombokVersion"
	annotationProcessor "org.projectlombok:lombok:$lombokVersion"

	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	implementation "io.grpc:grpc-netty-shaded:$grpcVersion"
	implementation "io.grpc:grpc-protobuf:$grpcVersion"
	implementation "io.grpc:grpc-stub:$grpcVersion"
	implementation 'javax.annotation:javax.annotation-api:1.3.2'

	implementation 'net.devh:grpc-server-spring-boot-starter:3.0.0.RELEASE'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "io.grpc:grpc-testing:$grpcVersion"
	testImplementation 'org.testcontainers:postgresql:1.16.2'
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:$protobufVersion"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
		}
	}
	generateProtoTasks {
		all().each { task ->
			task.plugins {
				grpc {}
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
